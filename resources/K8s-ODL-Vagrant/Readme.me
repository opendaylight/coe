Steps:

1- Run vagrant up
2- ssh to the vm as vagrant ssh k8s-master
3- for each vm run the following commands
    - vagrant@k8smaster$ sudo mkdir -p /etc/cni/net.d/
    - We assume you already succeed to build the odlovs-cni binary,
        from your host use the following command to copy the odlovs-cni
        binary to the vm $ scp odlovs-cni vagrant@192.168.33.11:~/
        note: 192.168.33.11 is the ip of k8s-master
    - In the VM execute vagrant@k8smaster$ sudo cp odlovs-cni /opt/cni/bin
    - Also copy the .conf file to the /etc/cni/net.d/ directory
        ex: vagrant@k8sMaster:~$ sudo cp /vagrant/exmple/master.odlovs-cni.conf /etc/cni/net.d/
    - start the Kubernetes cluster using the following command
        vagrant@k8sMaster:~$ sudo kubeadm init --apiserver-advertise-address=192.168.33.11
        Note: if you get the swap issue do the following
        1- open the /etc/systemd/system/kubelet.service.d/10-kubeadm.conf file
            $ sudo vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        2- add the following line then save and close
            Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false"
        3- disable swap and restart kubelet
            $ sudo swapoff -a
            $ sudo systemctl daemon-reload
            $ sudo systemctl restart kubelet
        4- create k8s cluster using
            $ sudo kubeadm init --apiserver-advertise-address=192.168.33.11 --ignore-preflight-errors Swap
        Note: read the command output in order to use the kubectl command after
        Note: in the minion VMs you will use the join command instead ex:
        vagrant@k8sMinion2:~$ sudo kubeadm join --token {given_token} 192.168.33.11:6443 --discovery-token-ca-cert-hash sha256:<hash>
    - In order to create pods example use the following commands
        vagrant@k8sMaster:~$ kubectl create namespace sock-shop
        vagrant@k8sMaster:~$ kubectl apply -n sock-shop -f "https://github.com/microservices-demo/microservices-demo/blob/master/deploy/kubernetes/complete-demo.yaml?raw=true"
    - check the pods status by execute
        vagrant@k8sMaster:~$ kubectl -n sock-shop get pods -o wide
